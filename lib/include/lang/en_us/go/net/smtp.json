{
	"httpClientAuth": "--- Auth authenticates a client using the provided authentication mechanism.\n--- A failed authentication closes the connection.\n--- Only servers that advertise the AUTH extension support this function.",
	"httpClientClose": "--- Close closes the connection.",
	"httpClientData": "--- Data issues a DATA command to the server and returns a writer that\n--- can be used to write the mail headers and body. The caller should\n--- close the writer before calling any more methods on c. A call to\n--- Data must be preceded by one or more calls to Rcpt.",
	"httpClientExtension": "--- Extension reports whether an extension is support by the server.\n--- The extension name is case-insensitive. If the extension is supported,\n--- Extension also returns a string that contains any parameters the\n--- server specifies for the extension.",
	"httpClientHello": "--- Hello sends a HELO or EHLO to the server as the given host name.\n--- Calling this method is only necessary if the client needs control\n--- over the host name used. The client will introduce itself as \"localhost\"\n--- automatically otherwise. If Hello is called, it must be called before\n--- any of the other methods.",
	"httpClientMail": "--- Mail issues a MAIL command to the server using the provided email address.\n--- If the server supports the 8BITMIME extension, Mail adds the BODY=8BITMIME\n--- parameter. If the server supports the SMTPUTF8 extension, Mail adds the\n--- SMTPUTF8 parameter.\n--- This initiates a mail transaction and is followed by one or more Rcpt calls.",
	"httpClientNoop": "--- Noop sends the NOOP command to the server. It does nothing but check\n--- that the connection to the server is okay.",
	"httpClientQuit": "--- Quit sends the QUIT command and closes the connection to the server.",
	"httpClientRcpt": "--- Rcpt issues a RCPT command to the server using the provided email address.\n--- A call to Rcpt must be preceded by a call to Mail and may be followed by\n--- a Data call or another Rcpt call.",
	"httpClientReset": "--- Reset sends the RSET command to the server, aborting the current mail\n--- transaction.",
	"httpClientStartTLS": "--- StartTLS sends the STARTTLS command and encrypts all further communication.\n--- Only servers that advertise the STARTTLS extension support this function.",
	"httpClientTLSConnectionState": "--- TLSConnectionState returns the client's TLS connection state.\n--- The return values are their zero values if StartTLS did\n--- not succeed.",
	"httpClientVerify": "--- Verify checks the validity of an email address on the server.\n--- If Verify returns nil, the address is valid. A non-nil return\n--- does not necessarily indicate an invalid address. Many servers\n--- will not verify addresses for security reasons.",
	"httpClientcmd": "--- cmd is a convenience function that sends a command and returns the response",
	"httpClientehlo": "--- ehlo sends the EHLO (extended hello) greeting to the server. It\n--- should be the preferred greeting for servers that support it.",
	"httpClienthello": "--- hello runs a hello exchange if needed.",
	"httpClienthelo": "--- helo sends the HELO greeting to the server. It should be used only when the\n--- server does not support ehlo.",
	"smtpCRAMMD5Auth": "--- CRAMMD5Auth returns an Auth that implements the CRAM-MD5 authentication\n--- mechanism as defined in RFC 2195.\n--- The returned Auth uses the given username and secret to authenticate\n--- to the server using the challenge-response mechanism.",
	"smtpDial": "--- Dial returns a new Client connected to an SMTP server at addr.\n--- The addr must include a port, as in \"mail.example.com:smtp\".",
	"smtpNewClient": "--- NewClient returns a new Client using an existing connection and host as a\n--- server name to be used when authenticating.",
	"smtpPlainAuth": "--- PlainAuth returns an Auth that implements the PLAIN authentication\n--- mechanism as defined in RFC 4616. The returned Auth uses the given\n--- username and password to authenticate to host and act as identity.\n--- Usually identity should be the empty string, to act as username.\n---\n--- PlainAuth will only send the credentials if the connection is using TLS\n--- or is connected to localhost. Otherwise authentication will fail with an\n--- error, without sending the credentials.",
	"smtpSendMail": "--- SendMail connects to the server at addr, switches to TLS if\n--- possible, authenticates with the optional mechanism a if possible,\n--- and then sends an email from address from, to addresses to, with\n--- message msg.\n--- The addr must include a port, as in \"mail.example.com:smtp\".\n---\n--- The addresses in the to parameter are the SMTP RCPT addresses.\n---\n--- The msg parameter should be an RFC 822-style email with headers\n--- first, a blank line, and then the message body. The lines of msg\n--- should be CRLF terminated. The msg headers should usually include\n--- fields such as \"From\", \"To\", \"Subject\", and \"Cc\".  Sending \"Bcc\"\n--- messages is accomplished by including an email address in the to\n--- parameter but not including it in the msg headers.\n---\n--- The SendMail function and the net/smtp package are low-level\n--- mechanisms and provide no support for DKIM signing, MIME\n--- attachments (see the mime/multipart package), or other mail\n--- functionality. Higher-level packages exist outside of the standard\n--- library."
}